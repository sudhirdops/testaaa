# Unique name for this workflow
name: Deploy master branch to production org

# Definition when the workflow should run
on:
    push:
      branches: [ master ]
      paths:
       # - 'force-app/**'
         - 'force-app/main/default/classes/**'
  
            

# Jobs to be executed
jobs:
    deploy-branch-to-production-org:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0

            # Store secret for production org
            - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_PRODUCTION_URL}} > ./SFDX_PRODUCTION_URL.txt

            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to HEAD --from HEAD~1 --output .
            # Authenticate to org
            - name: 'Authenticate to Production Org'
              run: sfdx auth:sfdxurl:store -f sfdxurl.txt
            
          
              
            - name: 'Deploy Data to Production org'
             # this will deploy whole metadata in classes file
             #run:  sfdx force:source:deploy -u dopssudhir@salesforcedev.com --manifest manifest/package.xml
             ## error in deployment
             #run:  sfdx force:mdapi:deploy -u dopssudhir@salesforcedev.com --json
             #run:  sfdx force:mdapi:deploy -u dopssudhir@salesforcedev.com --deploydir=convert -w 30 
              run: sfdx force:source:deploy -x package/package.xml --postdestructivechanges destructiveChanges/destructiveChanges.xml
             # run: sfdx force:mdapi:deploy -d convert/ -w 100 -u dopssudhir@salesforcedev.com -g
            #- name: 'Deploy destructive changes (if any) to Production org'
             # run: sfdx force:mdapi:deploy -d -u dopssudhir@salesforcedev.com "changed-sources/destructiveChanges" --checkonly --ignorewarnings 
